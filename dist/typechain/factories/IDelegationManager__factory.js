"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDelegationManager__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "staker",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "delegatedTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "withdrawer",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "uint32",
                        name: "startBlock",
                        type: "uint32",
                    },
                    {
                        internalType: "address[]",
                        name: "strategies",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "shares",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct WithdrawalInfo[]",
                name: "",
                type: "tuple[]",
            },
            {
                internalType: "address[][]",
                name: "",
                type: "address[][]",
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
            {
                internalType: "bool[]",
                name: "",
                type: "bool[]",
            },
        ],
        name: "completeQueuedWithdrawals",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "expiry",
                        type: "uint256",
                    },
                ],
                internalType: "struct ApproverSignatureAndExpiryParams",
                name: "",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "delegateTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address[]",
                        name: "strategies",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "shares",
                        type: "uint256[]",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                ],
                internalType: "struct QueuedWithdrawalParams[]",
                name: "",
                type: "tuple[]",
            },
        ],
        name: "queueWithdrawals",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IDelegationManager__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IDelegationManager__factory = IDelegationManager__factory;
IDelegationManager__factory.abi = _abi;
